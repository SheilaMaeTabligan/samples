
/*
 * This file is part of Eqela Samples
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

import capex.crypto

main
{
	var encipher = new AES128CipherGeneric()
	encipher.setKey("HelloWorldSwift!")
	encipher.setInitializationVector("HelloWorldSwift!")
	var encrpyt = BlockCipher.encryptString("Hello World", encipher)
	PRINT "Encrypt : " .. Base64Encoder.encode(encrpyt)
	var decipher = new AES128CipherGeneric()
	decipher.setKey("HelloWorldSwift!")
	decipher.setInitializationVector("HelloWorldSwift!")
	var decrypt = BlockCipher.decryptString(encrpyt, decipher)
	PRINT "Decrypt : " .. decrypt
	var encipher2 = new AES128CipherGeneric()
	encipher2.setKey("JobAndEstherTech")
	encipher2.setInitializationVector("JobAndEstherTech")
	var file = File.forPath("D:/JEPROGRAMMING/md5sampleapp/server/Sampletext.txt")
	var buf = file.getContentsBuffer()
	var encrpyt2 = BlockCipher.encryptBuffer(buf, encipher2)
	PRINT "Encrypt : " .. Base64Encoder.encode(encrpyt2)
	var decipher2 = new AES128CipherGeneric()
	decipher2.setKey("JobAndEstherTech")
	decipher2.setInitializationVector("JobAndEstherTech")
	var decrypt2 = BlockCipher.decryptBuffer(encrpyt2, decipher2)
	PRINT "Decrypt : " .. String.forUTF8Buffer(decrypt2)
}
